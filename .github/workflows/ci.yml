name: CI on multiple platforms

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      # build on
      # Windows: cl
      # MacOS: clang/clang++
      # Ubuntu: clang/clang++ & gcc/g++
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            name: Windows
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            name: Linux
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            name: Linux
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            name: macOS
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - if: ${{ runner.os == 'Linux' }}
      name: Install JUCE dependencies (Linux only)
      id: juce_dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install -y g++ libgtk-3-dev libgtk2.0-dev libwebkit2gtk-4.0-dev webkit2gtk-4.0 libfreetype6-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev mesa-common-dev libasound2-dev freeglut3-dev libxcomposite-dev libcurl4-openssl-dev
        
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Set Build info
      shell: bash
      run: |
        sed -i.bak "s/BUILD_NUMBER 0/BUILD_NUMBER ${{github.run_id}}/" Common/BuildInfo.h
        sed -i.bak "s/COMMIT_ID \"\"/COMMIT_ID \"${{github.event.pull_request.head.sha}}\"/" Common/BuildInfo.h

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
    
    - if: ${{ runner.os == 'macOS' }}
      name: Install packagesbuild
      shell: bash
      run: |
        wget http://s.sudre.free.fr/Software/files/Packages.dmg
        hdiutil attach Packages.dmg -mountpoint "/Volumes/PackagesTmp"
        sudo installer -package "/Volumes/PackagesTmp/Install Packages.pkg" -target /
        hdiutil detach /Volumes/PackagesTmp

    - name: Build Installer
      shell: bash
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ../Setup/build_installer.sh -p ${{ matrix.name }} -t "0.0.0.${{github.run_id}}" -n "ICST_AmbiPlugins_dev_${{ matrix.name }}_${{github.run_id}}"

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: ${{ steps.strings.outputs.build-output-dir }}/packages/*

